@using AgendaApp.Services.Dtos;

<div id="overlay" @onclick="Close" class="fixed @_hidden z-40 w-screen h-screen inset-0 bg-gray-900 bg-opacity-60"></div>
<div id="popup-modal" tabindex="-1" class="w-96   overflow-y-auto overflow-x-hidden fixed top-1/2 left-1/2 z-50 -translate-x-1/2 -translate-y-1/2  transition duration-500 transform  @_animationStyles">
    <div class="relative p-4 w-full max-w-md h-full md:h-auto ">
        <div class="relative bg-white dark:bg-slate-700 rounded-lg shadow">
            <EditForm EditContext="@editContent" OnSubmit="@HandleSubmit">
                <DataAnnotationsValidator />
                <button type="button" @onclick="Close" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white" data-modal-toggle="popup-modal">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                </button>
                <div class="p-6 text-center">
                    <h1 class="text-2xl font-semibold dark:text-slate-600">Cadastro de Tarefas</h1>
                    <div class="mt-3">
                        <InputText @bind-Value="_taskDto.Title"
                                   placeholder="Título da tarefa"
                                   class="shadow-sm focus:ring-slate-500 focus:border-slate-500 dark:bg-slate-500 mt-1 block w-full sm:text-sm border border-gray-300 dark:border-gray-600 rounded-md" />
                    </div>
                    <div class="mt-3">
                        <InputDate @bind-Value="_taskDto.DueTime" class="shadow-sm focus:ring-slate-500 focus:border-slate-500 dark:bg-slate-500 mt-1 block w-full sm:text-sm border border-gray-300 dark:border-gray-600 rounded-md" />
                    </div>
                    <div class="mt-3">
                        <InputTextArea @bind-Value="_taskDto.Description"
                                       placeholder="Descrição da tarefa"
                                       class="hadow-sm focus:ring-slate-500 focus:border-slate-500 dark:bg-slate-500 mt-1 block w-full sm:text-sm border border-gray-300 dark:border-gray-600 rounded-md" />
                    </div>
                    <button type="submit" id="save" class="mt-3 px-5 py-2 bg-slate-700 dark:bg-slate-500 hover:bg-slate-900 dark:hover:bg-slate-600 text-white dark:text-slate-900 cursor-pointer rounded-md">
                        Cadastrar Tarefa
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<TarefaDto> OnCreate { get; set; }

    private string _hidden = "hidden";
    private string _animationStyles = "opacity-0";
    private EditContext editContent;
    private TarefaDto _taskDto = new();

    //função executada ao abrir o componente
    protected override void OnInitialized()
    {
        editContent = new(_taskDto);
    }

    //função para abrir a modal do formulário
    public void Open()
    {
        _hidden = string.Empty;
        _animationStyles = "opacity-100";
    }

    //função para fechar a modal do formulário
    public void Close()
    {
        _hidden = "hidden";
        _animationStyles = "opacity-0 pointer-events-none";
    }

    //função para capturar o SUBMIT do formulário
    private async Task HandleSubmit()
    {
        if (editContent != null && editContent.Validate())
        {
            await OnCreate.InvokeAsync(_taskDto);
            _taskDto = new();
            Close();
        }
    }
}



